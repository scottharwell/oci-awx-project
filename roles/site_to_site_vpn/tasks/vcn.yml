---
- name: Create VCN
  oracle.oci.oci_network_vcn:
    config_profile_name: "{{ config_profile_name }}"
    compartment_id: "{{ compartment_id }}"
    cidr_blocks: "{{ vcn.cidr_blocks }}"
    display_name: "{{ vcn.display_name }}"
    dns_label: "{{ vcn.dns_label }}"
    state: present
    freeform_tags:
      deployment: ansible
  register: vcn_results

- name: Create Web and SSH Security List
  register: public_security_list
  oracle.oci.oci_network_security_list:
    display_name: Allow Public HTTP(S) and SSH
    compartment_id: "{{ compartment_id }}"
    vcn_id: "{{ vcn_results.vcn.id }}"
    egress_security_rules:
      - destination: "0.0.0.0/0"
        protocol: "{{ oci.vcn_protocols.all }}"
        is_stateless: false
    ingress_security_rules:
      # Allow SSH
      - protocol: "{{ oci.vcn_protocols.TCP }}"
        source: "0.0.0.0/0"
        is_stateless: false
        source_type: CIDR_BLOCK
        tcp_options:
          destination_port_range:
            max: 22
            min: 22
      # Allow HTTP
      - protocol: "{{ oci.vcn_protocols.TCP }}"
        source: "0.0.0.0/0"
        is_stateless: false
        source_type: CIDR_BLOCK
        tcp_options:
          destination_port_range:
            max: 80
            min: 80
      # Allow HTTPS
      - protocol: "{{ oci.vcn_protocols.TCP }}"
        source: "0.0.0.0/0"
        is_stateless: false
        source_type: CIDR_BLOCK
        tcp_options:
          destination_port_range:
            max: 443
            min: 443
      # Allow External Pings
      - protocol: "{{ oci.vcn_protocols.ICMP }}"
        source: "0.0.0.0/0"
        is_stateless: false
        source_type: CIDR_BLOCK
        icmp_options:
          type: 3
          code: 4
      # Allow Internal Pings
      - protocol: "{{ oci.vcn_protocols.ICMP }}"
        source: "{{ vcn.cidr_blocks[0] }}"
        is_stateless: false
        source_type: CIDR_BLOCK
        icmp_options:
          type: 3
    freeform_tags:
      deployment: ansible

- name: Create Web Security List
  register: web_security_list
  oracle.oci.oci_network_security_list:
    display_name: Allow Public HTTP(S)
    compartment_id: "{{ compartment_id }}"
    vcn_id: "{{ vcn_results.vcn.id }}"
    egress_security_rules:
      - destination: "0.0.0.0/0"
        protocol: all
        is_stateless: false
    ingress_security_rules:
      # Allow HTTP
      - protocol: "{{ oci.vcn_protocols.TCP }}"
        source: "0.0.0.0/0"
        is_stateless: false
        source_type: CIDR_BLOCK
        tcp_options:
          destination_port_range:
            max: 80
            min: 80
      # Allow HTTPS
      - protocol: "{{ oci.vcn_protocols.TCP }}"
        source: "0.0.0.0/0"
        is_stateless: false
        source_type: CIDR_BLOCK
        tcp_options:
          destination_port_range:
            max: 443
            min: 443
      # Allow Internal Pings
      - protocol: "{{ oci.vcn_protocols.ICMP }}"
        source: "{{ vcn.cidr_blocks[0] }}"
        is_stateless: false
        source_type: CIDR_BLOCK
        icmp_options:
          type: 3
    freeform_tags:
      deployment: ansible

- name: Create Private Security List
  register: private_security_list
  oracle.oci.oci_network_security_list:
    display_name: Internal Traffic
    compartment_id: "{{ compartment_id }}"
    vcn_id: "{{ vcn_results.vcn.id }}"
    egress_security_rules:
      - destination: "0.0.0.0/0"
        protocol: all
        is_stateless: false
    ingress_security_rules:
      # Allow SSH
      - protocol: "{{ oci.vcn_protocols.TCP }}"
        source: "{{ vcn.cidr_blocks[0] }}"
        is_stateless: false
        source_type: CIDR_BLOCK
        tcp_options:
          destination_port_range:
            max: 22
            min: 22
      # Allow Internal Pings
      - protocol: "{{ oci.vcn_protocols.ICMP }}"
        source: "{{ vcn.cidr_blocks[0] }}"
        is_stateless: false
        source_type: CIDR_BLOCK
    freeform_tags:
      deployment: ansible

- name: Create Internet Gateway for public facing networks
  register: internet_gateway
  oracle.oci.oci_network_internet_gateway:
    compartment_id: "{{ compartment_id }}"
    is_enabled: true
    vcn_id: "{{ vcn_results.vcn.id }}"
    display_name: Public Internet Gateway
    freeform_tags:
      deployment: ansible

- name: Create NAT Gateway for internal networks
  register: nat_gateway
  oracle.oci.oci_network_nat_gateway:
    compartment_id: "{{ compartment_id }}"
    vcn_id: "{{ vcn_results.vcn.id }}"
    display_name: NAT Gateway
    freeform_tags:
      deployment: ansible

- name: Create Peering Gateway
  register: peergw_gateway
  oracle.oci.oci_network_local_peering_gateway:
    compartment_id: "{{ compartment_id }}"
    vcn_id: "{{ vcn_results.vcn.id }}"
    display_name: Hub Peering GW
    freeform_tags:
      deployment: ansible

- name: Internet Gateway Route Table
  register: igw_route_table
  oracle.oci.oci_network_route_table:
    compartment_id: "{{ compartment_id }}"
    vcn_id: "{{ vcn_results.vcn.id }}"
    display_name: Public Networks Route Table
    route_rules:
      - network_entity_id: "{{ internet_gateway.internet_gateway.id }}"
        destination: "0.0.0.0/0"
        destination_type: CIDR_BLOCK
        description: Internet Traffic
    freeform_tags:
      deployment: ansible

- name: NAT Gateway Route Table
  register: natgw_route_table
  oracle.oci.oci_network_route_table:
    compartment_id: "{{ compartment_id }}"
    vcn_id: "{{ vcn_results.vcn.id }}"
    display_name: Private Networks Route Table
    route_rules:
      - network_entity_id: "{{ nat_gateway.nat_gateway.id }}"
        destination: "0.0.0.0/0"
        destination_type: CIDR_BLOCK
        description: Internet Traffic
    freeform_tags:
      deployment: ansible

- name: Create subnets
  oracle.oci.oci_network_subnet:
    compartment_id: "{{ compartment_id }}"
    vcn_id: "{{ vcn_results.vcn.id }}"
    display_name: "{{ item.display_name }}"
    cidr_block: "{{ item.cidr_block }}"
    prohibit_internet_ingress: "{{ item.prohibit_internet_ingress }}"
    prohibit_public_ip_on_vnic: "{{ item.prohibit_public_ip_on_vnic }}"
    freeform_tags: "{{ item.freeform_tags }}"
  loop: "{{ vcn.subnets }}"
  register: subnets_results

- name: Assign security lists and route table to private networks
  vars:
    subnet_query: "results[?subnet.freeform_tags.accessibility=='private'].subnet.id"
  oracle.oci.oci_network_subnet:
    compartment_id: "{{ compartment_id }}"
    subnet_id: "{{ item }}"
    route_table_id: "{{ natgw_route_table.route_table.id }}"
    security_list_ids:
      - "{{ private_security_list.security_list.id }}"
  loop: "{{ subnets_results | community.general.json_query(subnet_query) }}"

- name: Assign security lists and route table to public networks
  vars:
    subnet_query: "results[?subnet.freeform_tags.accessibility=='public'].subnet.id"
  oracle.oci.oci_network_subnet:
    compartment_id: "{{ compartment_id }}"
    subnet_id: "{{ item }}"
    route_table_id: "{{ igw_route_table.route_table.id }}"
    security_list_ids:
      - "{{ private_security_list.security_list.id }}"
  loop: "{{ subnets_results | community.general.json_query(subnet_query) }}"

- name: Set stats
  ansible.builtin.set_stats:
    data:
      vcn_id: "{{ vcn_results.vcn.id }}"
      subnet_ids: "{{ subnets_results | community.general.json_query('results[].subnet.id') }}"
      public_security_list_id: "{{ public_security_list.security_list.id }}"
      web_security_list_id: "{{ web_security_list.security_list.id }}"
      private_security_list_id: "{{ private_security_list.security_list.id }}"
      internet_gateway_id: "{{ internet_gateway.internet_gateway.id }}"
      nat_gateway_id: "{{ nat_gateway.nat_gateway.id }}"
      peergw_gateway_id: "{{ peergw_gateway.local_peering_gateway.id }}"
      igw_route_table: "{{ igw_route_table.route_table.id }}"
      natgw_route_table: "{{ natgw_route_table.route_table.id }}"
  register: stats

- name: Debug
  ansible.builtin.debug:
    var: stats
